#Compose file for production, similarly create for test and staging env's


#Version is no longer used (always uses most recent)

#Define parameters etc for each service
services:
  web:
    #Tell it where to find dockerfile
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
    #Can set what the image name & tag are here!
    image: vidly_web:1
    #Use array/list syntax as we can have multiple ports
    ports:
      #default port (just URL without port specified)
      - 80:80
    #Restart policy (default is no, many values to choose)
    restart: unless-stopped

  api:
    build: ./backend
    ports:
      - 3001:3001

    restart: unless-stopped

    #Environment variables also as list or object property syntax (more readable)
    environment:
      #Need environment variable to tell where database is
      # - DB_URL=mongodb://db/vidly
      #Can also use object/property valye syntax
      DB_URL: mongodb://db/vidly
      
    #Can remove volumes in production

    #Can overwrite default command in dockerfile
    #Since db might not be up, need to use a waiting script!
    # command: .wait-for db:27017 && migrate-mongo up && npm start

    #Instead of above, used a basic shell script (keeps compose file cleaner)
    command: ./docker-entrypoint.sh
    
  db:
    #Tell it to pull from docker hub (instead of build)
    image: mongo:4.0-xenial

    #Use port of that database client (check Postgresql)
    ports:
      - 27017:27017

    #Need mongo to write to different volume instead of /data/db
    volumes:
      - vidly:/data/db
    restart: unless-stopped

#Outside of services
#Need to define vidly volume here too for usage above
volumes:
  vidly:

    